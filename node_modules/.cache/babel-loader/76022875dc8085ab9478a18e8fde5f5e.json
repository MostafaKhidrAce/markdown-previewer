{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ism\\\\markdown-previewer\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState, useEffect } from \"react\";\nimport { marked } from \"marked\";\nimport syntaxData from \"./syntax.json\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction useLocalStorage(key, initialValue) {\n  _s();\n\n  const [value, setValue] = useState(() => {\n    const storedValue = localStorage.getItem(key);\n    return storedValue ? JSON.parse(storedValue) : initialValue;\n  });\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n}\n\n_s(useLocalStorage, \"HLmv782Wfm94qGfm4asyhbt4fWo=\");\n\nconst App = () => {\n  _s2();\n\n  const [code, setCode] = useLocalStorage(\"markdown\", \"## Hello\");\n  const [compiled, setCompiled] = useState('<h2 id=\"hello\">Hello</h2>');\n  const [activeTab, setActiveTab] = useState(\"Editor\");\n  const [docsContent, setDocsContent] = useState([syntaxData.basic_syntax]);\n\n  const openMD = () => {\n    setActiveTab(\"Editor\");\n  };\n\n  const openPreview = () => {\n    setActiveTab(\"Preview\");\n  };\n\n  const openDocs = () => {\n    setActiveTab(\"Docs\");\n  };\n\n  const handleChange = e => {\n    setCode(e.target.value);\n    setCompiled(marked.parse(e.target.value));\n  }; // useEffect(() => {\n  //   setDocsContent(syntaxData.basic_syntax);\n  // }, []);\n\n\n  const finalContact = docsContent.mab(item => {\n    return (syntax, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: syntax.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: syntax.description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Examples:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), syntax.examples.map((example, exampleIndex) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"pre\", {\n          style: {\n            background: \"#f0f0f0\",\n            padding: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: example.markdown\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          style: {\n            background: \"#f0f0f0\",\n            padding: \"10px\"\n          },\n          children: /*#__PURE__*/_jsxDEV(\"code\", {\n            children: example.html\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)]\n      }, exampleIndex, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this);\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MarkDown Previewer React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openMD,\n          className: `btn ${activeTab === \"Editor\" ? \"active\" : \"\"}`,\n          children: \"MarkDown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openPreview,\n          className: `btn ${activeTab === \"Preview\" ? \"active\" : \"\"}`,\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openDocs,\n          className: `btn ${activeTab === \"Docs\" ? \"active\" : \"\"}`,\n          children: \"Docs\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), activeTab === \"Editor\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleChange,\n          value: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this), activeTab === \"Preview\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          readOnly: true,\n          value: compiled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), activeTab === \"Docs\" && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Documentation\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: finalContact\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(App, \"QY5lMJHQzveunABqbQSn4YthSS4=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Ism/markdown-previewer/src/App.js"],"names":["React","useState","useEffect","marked","syntaxData","useLocalStorage","key","initialValue","value","setValue","storedValue","localStorage","getItem","JSON","parse","setItem","stringify","App","code","setCode","compiled","setCompiled","activeTab","setActiveTab","docsContent","setDocsContent","basic_syntax","openMD","openPreview","openDocs","handleChange","e","target","finalContact","mab","item","syntax","index","name","description","examples","map","example","exampleIndex","background","padding","markdown","html"],"mappings":"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","sourcesContent":["import \"./App.css\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { marked } from \"marked\";\r\nimport syntaxData from \"./syntax.json\";\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n  const [value, setValue] = useState(() => {\r\n    const storedValue = localStorage.getItem(key);\r\n    return storedValue ? JSON.parse(storedValue) : initialValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n\r\n  return [value, setValue];\r\n}\r\n\r\nconst App = () => {\r\n  const [code, setCode] = useLocalStorage(\"markdown\", \"## Hello\");\r\n  const [compiled, setCompiled] = useState('<h2 id=\"hello\">Hello</h2>');\r\n  const [activeTab, setActiveTab] = useState(\"Editor\");\r\n  const [docsContent, setDocsContent] = useState([syntaxData.basic_syntax]);\r\n\r\n  const openMD = () => {\r\n    setActiveTab(\"Editor\");\r\n  };\r\n\r\n  const openPreview = () => {\r\n    setActiveTab(\"Preview\");\r\n  };\r\n\r\n  const openDocs = () => {\r\n    setActiveTab(\"Docs\");\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setCode(e.target.value);\r\n    setCompiled(marked.parse(e.target.value));\r\n  };\r\n\r\n  // useEffect(() => {\r\n  //   setDocsContent(syntaxData.basic_syntax);\r\n  // }, []);\r\n\r\n  const finalContact = docsContent.mab((item) => {\r\n    return (syntax, index) => (\r\n      <div key={index}>\r\n        <h2>{syntax.name}</h2>\r\n        <p>{syntax.description}</p>\r\n        <h3>Examples:</h3>\r\n        {syntax.examples.map((example, exampleIndex) => (\r\n          <div key={exampleIndex}>\r\n            <pre style={{ background: \"#f0f0f0\", padding: \"10px\" }}>\r\n              <code>{example.markdown}</code>\r\n            </pre>\r\n            <div style={{ background: \"#f0f0f0\", padding: \"10px\" }}>\r\n              <code>{example.html}</code>\r\n            </div>\r\n          </div>\r\n        ))}\r\n        {/* Additional examples */}\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <>\r\n      <h1>MarkDown Previewer React App</h1>\r\n      <div className=\"container\">\r\n        <div className=\"btns\">\r\n          <button\r\n            onClick={openMD}\r\n            className={`btn ${activeTab === \"Editor\" ? \"active\" : \"\"}`}\r\n          >\r\n            MarkDown\r\n          </button>\r\n          <button\r\n            onClick={openPreview}\r\n            className={`btn ${activeTab === \"Preview\" ? \"active\" : \"\"}`}\r\n          >\r\n            Preview\r\n          </button>\r\n          <button\r\n            onClick={openDocs}\r\n            className={`btn ${activeTab === \"Docs\" ? \"active\" : \"\"}`}\r\n          >\r\n            Docs\r\n          </button>\r\n        </div>\r\n        {activeTab === \"Editor\" && (\r\n          <div>\r\n            <textarea onChange={handleChange} value={code} />\r\n          </div>\r\n        )}\r\n        {activeTab === \"Preview\" && (\r\n          <div>\r\n            <textarea readOnly value={compiled} />\r\n          </div>\r\n        )}\r\n        {activeTab === \"Docs\" && (\r\n          <div>\r\n            <h2>Documentation</h2>\r\n            <div>{finalContact}</div>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}