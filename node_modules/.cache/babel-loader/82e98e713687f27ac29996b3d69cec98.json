{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ism\\\\markdown-previewer\\\\src\\\\App.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"./App.css\";\nimport React, { useState } from \"react\";\nimport { marked } from \"marked\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction useLocalStorage(key, initialValue) {\n  _s();\n\n  const [value, setValue] = useState(() => {\n    const storedValue = localStorage.getItem(key);\n    return storedValue ? JSON.parse(storedValue) : initialValue;\n  });\n  useEffect(() => {\n    localStorage.setItem(key, JSON.stringify(value));\n  }, [key, value]);\n  return [value, setValue];\n}\n\n_s(useLocalStorage, \"HLmv782Wfm94qGfm4asyhbt4fWo=\");\n\nconst App = () => {\n  _s2();\n\n  const [code, setCode] = useState(\"## Hello\");\n  const [compiled, setCompiled] = useState('<h2 id=\"hello\">Hello</h2>');\n  const [hide, hidePreview] = useState(true);\n\n  const openMD = () => {\n    console.log(0);\n    hidePreview(true);\n  };\n\n  const openPreview = () => {\n    console.log(0);\n    hidePreview(false);\n  };\n\n  const handleChange = e => {\n    setCode(e.target.value);\n    setCompiled(marked.parse(e.target.value));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"MarkDown Previewer React App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"btns\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openMD,\n          className: \"btn\",\n          children: \"MarkDown\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: openPreview,\n          children: \"Preview\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this), hide ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          onChange: handleChange,\n          value: code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: compiled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s2(App, \"YmkBOUfMe4sK7oGkiC15rU/bizA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Ism/markdown-previewer/src/App.js"],"names":["React","useState","marked","useLocalStorage","key","initialValue","value","setValue","storedValue","localStorage","getItem","JSON","parse","useEffect","setItem","stringify","App","code","setCode","compiled","setCompiled","hide","hidePreview","openMD","console","log","openPreview","handleChange","e","target"],"mappings":";;;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,MAAT,QAAuB,QAAvB;;;;AAEA,SAASC,eAAT,CAAyBC,GAAzB,EAA8BC,YAA9B,EAA4C;AAAA;;AAC1C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,MAAM;AACvC,UAAMO,WAAW,GAAGC,YAAY,CAACC,OAAb,CAAqBN,GAArB,CAApB;AACA,WAAOI,WAAW,GAAGG,IAAI,CAACC,KAAL,CAAWJ,WAAX,CAAH,GAA6BH,YAA/C;AACD,GAHiC,CAAlC;AAKAQ,EAAAA,SAAS,CAAC,MAAM;AACdJ,IAAAA,YAAY,CAACK,OAAb,CAAqBV,GAArB,EAA0BO,IAAI,CAACI,SAAL,CAAeT,KAAf,CAA1B;AACD,GAFQ,EAEN,CAACF,GAAD,EAAME,KAAN,CAFM,CAAT;AAIA,SAAO,CAACA,KAAD,EAAQC,QAAR,CAAP;AACD;;GAXQJ,e;;AAaT,MAAMa,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,QAAQ,CAAC,UAAD,CAAhC;AACA,QAAM,CAACkB,QAAD,EAAWC,WAAX,IAA0BnB,QAAQ,CAAC,2BAAD,CAAxC;AACA,QAAM,CAACoB,IAAD,EAAOC,WAAP,IAAsBrB,QAAQ,CAAC,IAAD,CAApC;;AAEA,QAAMsB,MAAM,GAAG,MAAM;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACAH,IAAAA,WAAW,CAAC,IAAD,CAAX;AACD,GAHD;;AAKA,QAAMI,WAAW,GAAG,MAAM;AACxBF,IAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACAH,IAAAA,WAAW,CAAC,KAAD,CAAX;AACD,GAHD;;AAKA,QAAMK,YAAY,GAAIC,CAAD,IAAO;AAC1BV,IAAAA,OAAO,CAACU,CAAC,CAACC,MAAF,CAASvB,KAAV,CAAP;AACAc,IAAAA,WAAW,CAAClB,MAAM,CAACU,KAAP,CAAagB,CAAC,CAACC,MAAF,CAASvB,KAAtB,CAAD,CAAX;AACD,GAHD;;AAKA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,MAAf;AAAA,gCACE;AAAQ,UAAA,OAAO,EAAEiB,MAAjB;AAAyB,UAAA,SAAS,EAAC,KAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE;AAAQ,UAAA,OAAO,EAAEG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAOGL,IAAI,gBACH;AAAA,+BACE;AAAU,UAAA,QAAQ,EAAEM,YAApB;AAAkC,UAAA,KAAK,EAAEV;AAAzC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADG,gBAKH;AAAA,+BACE;AAAU,UAAA,KAAK,EAAEE;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA,kBADF;AAsBD,CA1CD;;IAAMH,G;;KAAAA,G;AA4CN,eAAeA,GAAf","sourcesContent":["import \"./App.css\";\r\nimport React, { useState } from \"react\";\r\nimport { marked } from \"marked\";\r\n\r\nfunction useLocalStorage(key, initialValue) {\r\n  const [value, setValue] = useState(() => {\r\n    const storedValue = localStorage.getItem(key);\r\n    return storedValue ? JSON.parse(storedValue) : initialValue;\r\n  });\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(key, JSON.stringify(value));\r\n  }, [key, value]);\r\n\r\n  return [value, setValue];\r\n}\r\n\r\nconst App = () => {\r\n  const [code, setCode] = useState(\"## Hello\");\r\n  const [compiled, setCompiled] = useState('<h2 id=\"hello\">Hello</h2>');\r\n  const [hide, hidePreview] = useState(true);\r\n\r\n  const openMD = () => {\r\n    console.log(0);\r\n    hidePreview(true);\r\n  };\r\n\r\n  const openPreview = () => {\r\n    console.log(0);\r\n    hidePreview(false);\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setCode(e.target.value);\r\n    setCompiled(marked.parse(e.target.value));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <h1>MarkDown Previewer React App</h1>\r\n      <div className=\"container\">\r\n        <div className=\"btns\">\r\n          <button onClick={openMD} className=\"btn\">\r\n            MarkDown\r\n          </button>\r\n          <button onClick={openPreview}>Preview</button>\r\n        </div>\r\n        {hide ? (\r\n          <div>\r\n            <textarea onChange={handleChange} value={code} />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <textarea value={compiled} />\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}